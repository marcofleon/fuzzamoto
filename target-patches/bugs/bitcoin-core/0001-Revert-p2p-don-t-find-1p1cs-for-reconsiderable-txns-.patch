From 0b28dc94f36397d79b4c4e140d0127b8ac5f34c9 Mon Sep 17 00:00:00 2001
From: dergoegge <n.goeggi@gmail.com>
Date: Fri, 23 May 2025 13:30:48 +0100
Subject: [PATCH] Revert "[p2p] don't find 1p1cs for reconsiderable txns that
 are AlreadyHaveTx"

This reverts commit 2266eba43a973345351f2b0a8296523fb7de5576.
---
 src/node/txdownloadman_impl.cpp | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp
index f319414042..d216afdd87 100644
--- a/src/node/txdownloadman_impl.cpp
+++ b/src/node/txdownloadman_impl.cpp
@@ -535,7 +535,17 @@ std::pair<bool, std::optional<PackageToValidate>> TxDownloadManagerImpl::Receive
     // already; and an adversary can already relay us old transactions
     // (older than our recency filter) if trying to DoS us, without any need
     // for witness malleation.
-    if (AlreadyHaveTx(GenTxid::Wtxid(wtxid), /*include_reconsiderable=*/false)) {
+    if (AlreadyHaveTx(GenTxid::Wtxid(wtxid), /*include_reconsiderable=*/true)) {
+
+        if (RecentRejectsReconsiderableFilter().contains(wtxid)) {
+            // When a transaction is already in m_lazy_recent_rejects_reconsiderable, we shouldn't submit
+            // it by itself again. However, look for a matching child in the orphanage, as it is
+            // possible that they succeed as a package.
+            LogDebug(BCLog::TXPACKAGES, "found tx %s (wtxid=%s) in reconsiderable rejects, looking for child in orphanage\n",
+                     txid.ToString(), wtxid.ToString());
+            return std::make_pair(false, Find1P1CPackage(ptx, nodeid));
+        }
+
         // If a tx is detected by m_lazy_recent_rejects it is ignored. Because we haven't
         // submitted the tx to our mempool, we won't have computed a DoS
         // score for it or determined exactly why we consider it invalid.
@@ -552,16 +562,8 @@ std::pair<bool, std::optional<PackageToValidate>> TxDownloadManagerImpl::Receive
         // peer simply for relaying a tx that our m_lazy_recent_rejects has caught,
         // regardless of false positives.
         return {false, std::nullopt};
-    } else if (RecentRejectsReconsiderableFilter().contains(wtxid)) {
-        // When a transaction is already in m_lazy_recent_rejects_reconsiderable, we shouldn't submit
-        // it by itself again. However, look for a matching child in the orphanage, as it is
-        // possible that they succeed as a package.
-        LogDebug(BCLog::TXPACKAGES, "found tx %s (wtxid=%s) in reconsiderable rejects, looking for child in orphanage\n",
-                 txid.ToString(), wtxid.ToString());
-        return {false, Find1P1CPackage(ptx, nodeid)};
     }
 
-
     return {true, std::nullopt};
 }
 
-- 
2.47.2

